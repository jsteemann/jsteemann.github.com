<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: PHP, | J@ArangoDB]]></title>
  <link href="http://jsteemann.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://jsteemann.github.io/"/>
  <updated>2015-09-10T14:47:47+02:00</updated>
  <id>http://jsteemann.github.io/</id>
  <author>
    <name><![CDATA[jsteemann]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ArangoDB-PHP Driver Improvements]]></title>
    <link href="http://jsteemann.github.io/blog/2015/09/10/arangodb-php-driver-improvements/"/>
    <updated>2015-09-10T14:05:40+02:00</updated>
    <id>http://jsteemann.github.io/blog/2015/09/10/arangodb-php-driver-improvements</id>
    <content type="html"><![CDATA[<p>While preparing the release of ArangoDB 2.7, some improvements were made for the
<a href="https://github.com/arangodb/arangodb-php">PHP driver for ArangoDB</a>.</p>

<p>The 2.7 version of the PHP driver now supports the AQL query results cache. The
cache can be turned on or off globally, or be set to demand mode. The demand mode will
allow controlling caching on a per-AQL-query basis.</p>

<p>Additionally, the HTTP transport layer in the PHP driver was improved. Some internal
string handling methods were optimized so that the transport part becomes cheaper. All
driver operations that communicate with the ArangoDB server will benefit from this.</p>

<p>For a demonstration of the improvements, here is a script that creates 100,000
documents in a local ArangoDB database via the PHP driver. As we&rsquo;re interested in assessing
the HTTP layer improvements, the script intentionally issues 100,000 HTTP requests
instead of using the specialized <code>import</code> method provided by the driver.</p>

<p>The script code can be found <a href="https://github.com/arangodb/arangodb-php/blob/devel/examples/http-test.php">here</a>.</p>

<p>The baseline for the improvments is the (non-optimized) 2.6 version of the PHP
driver. Here are the results for issuing 100,000 requests with the 2.6 driver
(script was run twice to see if there are variations in execution time):</p>

<p>```plain execution times with 2.6 driver
creating 100000 documents
creating documents took 55.144556999207 s</p>

<p>creating 100000 documents
creating documents took 54.476955890656 s
```</p>

<p>Running it with the 2.7 version of the PHP driver now shows the improvements.
Execution time for the same script goes down from 54 seconds to 42 seconds:
```plain execution times with 2.7 driver
creating 100000 documents
creating documents took 42.886090040207 s</p>

<p>creating 100000 documents
creating documents took 42.578990936279 s
```</p>

<p>The PHP version used here was:
```plain PHP version details
PHP 5.5.12-2ubuntu4.6 (cli) (built: Jul  2 2015 15:27:14)
Copyright &copy; 1997-2014 The PHP Group
Zend Engine v2.5.0, Copyright &copy; 1998-2014 Zend Technologies</p>

<pre><code>with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies
</code></pre>

<p>```</p>

<p>Following are the results from a different machine, this time using PHP 5.6:
```plain execution times with 2.6 driver
creating 100000 documents
creating documents took 48.394731044769 s</p>

<p>creating 100000 documents
creating documents took 47.618598937988 s
```</p>

<p>```plain execution times with 2.7 driver
creating 100000 documents
creating documents took 40.535583972931 s</p>

<p>creating 100000 documents
creating documents took 40.041265010834 s
```</p>

<p>The PHP version details for this machine were:
```plain PHP version details
PHP 5.6.4-4ubuntu6.2 (cli) (built: Jul  2 2015 15:29:28)
Copyright &copy; 1997-2014 The PHP Group
Zend Engine v2.6.0, Copyright &copy; 1998-2014 Zend Technologies</p>

<pre><code>with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies
</code></pre>

<p>```</p>

<p>The actual improvements depend on many factors, so your exact mileage may vary.
The improvements may not be noticable for applications that issue only a few
requests with the driver, but they will be significant when performing lots of
requests, as in the above examples.</p>
]]></content>
  </entry>
  
</feed>
