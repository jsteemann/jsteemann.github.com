<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: V8 | J@ArangoDB]]></title>
  <link href="http://jsteemann.github.io/blog/categories/v8/atom.xml" rel="self"/>
  <link href="http://jsteemann.github.io/"/>
  <updated>2016-06-03T00:48:00+02:00</updated>
  <id>http://jsteemann.github.io/</id>
  <author>
    <name><![CDATA[jsteemann]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Compiling V8 With G++6]]></title>
    <link href="http://jsteemann.github.io/blog/2016/06/02/compiling-v8-with-g-plus-plus-6/"/>
    <updated>2016-06-02T20:14:46+02:00</updated>
    <id>http://jsteemann.github.io/blog/2016/06/02/compiling-v8-with-g-plus-plus-6</id>
    <content type="html"><![CDATA[<p>With g++ 6 becoming more and more adopted, it&rsquo;s about time to point out an issue
that hit some of us ArangoDB developers and a few of our users that compile ArangoDB
from source with g++ 6.</p>

<p>The problem is that when compiling ArangoDB with g++6 with default options, arangod
starts and almost immediately segfaults.</p>

<!-- more -->


<p>A backtrace of the crashed arangod process shows that the segfaults originate from
the V8 JavaScript engine that ArangoDB uses internally.
The problem seems to have affected other users of V8 as well, indicated by the following
error reports:</p>

<ul>
<li>node.js: <a href="https://github.com/nodejs/node/issues/6724">https://github.com/nodejs/node/issues/6724</a></li>
<li>chromium: <a href="https://gcc.gnu.org/bugzilla/show_bug.cgi?id=68853">https://gcc.gnu.org/bugzilla/show_bug.cgi?id=68853</a></li>
</ul>


<p>The reason for the error now popping up is a change in the g++ 6 optimizer as stated
in the <a href="https://gcc.gnu.org/gcc-6/changes.html">gcc6 release notes</a>:</p>

<blockquote><p>Value range propagation now assumes that the this pointer of C++ member functions is non-null.
This eliminates common null pointer checks but also breaks some non-conforming code-bases (such as Qt-5, Chromium, KDevelop).
As a temporary work-around -fno-delete-null-pointer-checks can be used. Wrong code can be identified by using -fsanitize=undefined.</p></blockquote>

<p>That means if compiling ArangoDB 2.8 from source with g++ 6 or higher, please be sure to
set the environment variables <code>CFLAGS="-fno-delete-null-pointer-checks"</code> and<br/>
<code>CXXFLAGS="-fno-delete-null-pointer-checks"</code> before invoking the <code>configure</code> command:</p>

<p><code>bash
make setup
CFLAGS="-fno-delete-null-pointer-checks" CXXFLAGS="-fno-delete-null-pointer-checks" ./configure
make
</code></p>

<p>The options will then be passed to the sub-make that builds the V8 engine. If you have
already built V8 without these options, try removing the file <code>.v8-build-64</code> from the
build directory and run <code>configure</code> and <code>make</code> again.</p>

<p>As a reminder, ArangoDB 2.8 will also emit this big notice at the end of its <code>configure</code> output:</p>

<p><code>plain
configure: --------------------------------------------------------------------------------
configure:                                                                                 
configure: NOTE: if you are compiling ArangoDB with g++ 6.0 or higher, please make sure to
configure: set the following environment variables when compiling ArangoDB:                
configure:                                                                                 
configure:   CFLAGS="-fno-delete-null-pointer-checks"                                      
configure:   CXXFLAGS="-fno-delete-null-pointer-checks"                                    
configure:                                                                                 
configure: --------------------------------------------------------------------------------
</code></p>

<p>Users of g++ 5.x do not need to set these flags, neither need users of clang++. And in the
ArangoDB 3.0 build the options will be set automatically when compiling V8 if the compiler
is g++. They will not be set for compiling any other parts of ArangoDB as it&rsquo;s only required
for building V8.</p>
]]></content>
  </entry>
  
</feed>
